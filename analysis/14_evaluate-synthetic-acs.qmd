---
title: "Synthetic ACS Evaluation"
format: 
  html:
    embed-resources: true
    toc: true
editor: source
execute:
  echo: true
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages-and-function

library(tidyverse)
library(furrr)
library(here)
library(tidysynthesis)
library(syntheval)
library(tictoc)
library(urbnthemes)

set_urbn_defaults(style = "print")

source(here("R", "prediction_test.R"))
source(here("R", "kmarginals.R"))
source(here("R", "proportions.R"))
source(here("R", "discriminator_auc.R"))
source(here("R", "regression_ci_overlap.R"))
source(here("R", "membership_inference_test.R"))

source(here("R", "summarize_results.R"))

```

## Load ACS

```{r}
#| label: load-data
gsds <- readRDS(here("data", "starting", "acs-gsds.rds")) |>
  select(-serial)

holdout <- readRDS(here("data", "starting", "acs-holdout.rds")) |>
  select(-serial) |>
  slice_sample(prop = 0.1)

syntheses <- list.files(here::here("data", "results", "acs"), full.names = TRUE)[-1]

plan(multisession, workers = 12)

tic()
results <- syntheses |>
  future_map(
    .f = ~readRDS(.x) |> 
      summarize_results(data = gsds, holdout = holdout), 
    progress = TRUE)
toc()

saveRDS(results, here("data", "results", "acs", "acs-metrics.rds"))

specs <- read_csv(here::here("data", "results", "acs", "specs.csv")) |>
  mutate(
    opt_in = factor(opt_in),
    white_multiplier = factor(white_multiplier)
  )

```

## Univariate Utility

```{r}
bind_cols(
  specs |> 
    slice(rep(1:n(), each = 32)),
  results |>
    map("proportions") |>
    map_dfr(.f = ~.x |> 
              pivot_wider(id_cols = c(variable, class), names_from = source, values_from = prop)
    ) |>
    mutate(abs_error = abs(original - synthetic))
) |>
  filter(white_multiplier == "1") |>
  ggplot(aes(opt_in, abs_error)) +
  geom_point(alpha = 0.4) +
  facet_wrap(~variable) +
  labs(
    title = "Low Opt-In Modestly Improves Univariate Proportion Estimates",
    subtitle = "Equal Opt-In Probabilities for All Races",
    x = "Proportion Opt In",
    y = "Absolute Error In Proportion"
  ) +
  scatter_grid()

bind_cols(
  specs |> 
    slice(rep(1:n(), each = 32)),
  results |>
    map("proportions") |>
    map_dfr(.f = ~.x |> 
              pivot_wider(id_cols = c(variable, class), names_from = source, values_from = prop)
    ) |>
    mutate(abs_error = abs(original - synthetic))
) |>
  ggplot(aes(opt_in, abs_error, color = white_multiplier)) +
  geom_point(alpha = 0.4) +
  facet_wrap(~variable) +
  labs(
    title = "Low Opt-In Modestly Improves Univariate Proportion Estimates",
    subtitle = "Equal Opt-In Probabilities for All Races",
    x = "Proportion Opt In",
    y = "Absolute Error In Proportion"
  ) +
  scatter_grid()

bind_cols(
  specs,
  results |>
    map("moments") |>
    map_dfr(.f = ~.x |> filter(variable == "incwage", statistic == "have"))
) |>
  ggplot(aes(opt_in, abs(proportion_difference), color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = "Low Opt-in Improves the Proportion of People with Salaries and Wages"
  ) +
  scatter_grid()

bind_cols(
  specs |> 
    slice(rep(1:n(), each = 9)),
  results |>
    map("moments_race") |>
    map_dfr(.f = ~.x |> filter(variable == "incwage", statistic == "have"))
) |>
  ggplot(aes(opt_in, abs(proportion_difference), color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  facet_wrap(~race) +
  labs(
    title = "Small Groups Have Much Worse Accuracy for the Number of People with Salaries or Wages",
    subtitle = "Low Opt-in Improves the Proportion of People with Salaries and Wages"
  ) +
  scatter_grid()


bind_cols(
  specs,
  results |>
    map("moments") |>
    map_dfr(.f = ~.x |> filter(variable == "incwage", statistic == "mean"))
) |>
  ggplot(aes(opt_in, abs(proportion_difference), color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = "Low Opt-In Dramatically Improves Estimates of Mean Wage and Salary Income",
    x = "Proportion Opt In",
    y = "Absolute Proportion Error in Mean Wage and Salary Income"
  ) +
  scatter_grid()

bind_cols(
  specs |> 
    slice(rep(1:n(), each = 9)),
  results |>
    map("moments_race") |>
    map_dfr(.f = ~.x |> filter(variable == "incwage", statistic == "mean"))
) |>
  ggplot(aes(opt_in, abs(proportion_difference), color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  facet_wrap(~race) +
  labs(
    title = "Low Opt-In Dramatically Improves Estimates of Mean Wage and Salary Income",
    x = "Proportion Opt In",
    y = "Absolute Proportion Error in Mean Wage and Salary Income"
  ) +
  scatter_grid()
  
  

```

Increasing opt in for small groups can increase their utility. 



## Bivariate Utility

```{r}
bind_cols(
  specs,
  correlation_difference_mae = results |>
    map_dbl(.f = ~ .x$cor_fit$correlation_difference_mae)
) |>
  ggplot(aes(opt_in, correlation_difference_mae, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = "Low Opt-In Improves Synthetic Correlations",
    x = "Proportion Opt In",
    y = "Mean Absolute Error in Pairwise Correlation Coefficient"
  ) +
  scatter_grid()

```

```{r}
bind_cols(
  specs,
  results |>
    map("percentiles")
)



```

## Multivariate Utility

```{r}
bind_cols(
  specs,
  k1_marginals = results |>
    map_dbl("k1_marginals")
) |>
  ggplot(aes(opt_in, k1_marginals, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  scatter_grid()

bind_cols(
  specs,
  k2_marginals = results |>
    map_dbl("k2_marginals")
) |>
  ggplot(aes(opt_in, k2_marginals, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  scatter_grid()

bind_cols(
  specs,
  k3_marginals = results |>
    map_dbl("k3_marginals")
) |>
  ggplot(aes(opt_in, k3_marginals, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  scatter_grid()

```

As `k` increases, the opt-in has a much bigger relative impact than the white multiplier. 

```{r}
bind_cols(
  specs,
  discriminator_auc = results |>
    map_dbl("discriminator_auc")
) |>
  ggplot(aes(opt_in, discriminator_auc, color = white_multiplier)) +
  geom_point(alpha = 0.3)

```

## Specific Utility

```{r}
regression_ci_overlap <- bind_cols(
  specs,
  discriminator_auc = results |>
    map_dfr(
      .f = ~ .x$regression_ci_overlap$ci_overlap |>
        summarize(
          ci_overlap = mean(overlap),
          abs_std_coef_diff = mean(abs(std_coef_diff)),
          sign_match = mean(sign_match),
          inference_match = mean(inference_match)
        )
    )
)

# CI difference
regression_ci_overlap |>
  ggplot(aes(opt_in, abs_std_coef_diff, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = ""
  ) +
  scatter_grid()

# overlap
regression_ci_overlap |>
  ggplot(aes(opt_in, ci_overlap, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = ""
  ) +
  scatter_grid()

# sign match
regression_ci_overlap |>
  ggplot(aes(opt_in, sign_match, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = ""
  ) +
  scatter_grid()

# significance match
regression_ci_overlap |>
  ggplot(aes(opt_in, inference_match, color = white_multiplier)) +
  geom_point(alpha = 0.3) +
  labs(
    title = ""
  ) +
  scatter_grid()

```

## Disclosure Metrics

### L-Diversity

```{r}
bind_cols(
  specs,
  discriminator_auc = results |>
    map_dfr("ldiveristy")
)

```

### Attribute Inference Test

```{r}

bind_cols(
  specs,
  discriminator_auc = results |>
    map_dbl("incwelfr_rmse")
) |>
  ggplot(aes(opt_in, discriminator_auc)) +
  geom_point(alpha = 0.3)

incwelfr_rmse <- prediction_test(
  postsynth = readRDS(here("data", "starting", "acs-holdout.rds")) |>
  select(-serial), 
  data = gsds, 
  formula = incwelfr ~ .
)

incwelfr_rmse

```

### Membership Inference Test

```{r}
results[[1]]$membership_inference_test

bind_cols(
  specs,
  membership_inference_auc = results |>
    map("membership_inference_test") |>
    map_dbl("auc")
) |>
  ggplot(aes(opt_in, membership_inference_auc, color = white_multiplier)) +
  geom_point() +
  labs(
    title = "",
    x = "Opt-In Rate",
    y = "Membership Inference Test AUC"
  ) +
  scatter_grid()

```



